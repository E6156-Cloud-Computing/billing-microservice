name: CI/CD Pipeline
# Using Github Actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build and Test
      run: |
        echo "Building and testing the app"

    - name: Set up ssh key
      run: |
        echo "${{ secrets.EC2_KEY }}" | base64 --decode > my_private_key.pem
        chmod 600 my_private_key.pem

    # - name: Build Docker Image
    #   run: |
    #     # docker build -t your-app-name .
    #     echo "Build Docker Image"

    - name: Deploy to AWS EC2
      run: |
        ssh -i my_private_key.pem -o "StrictHostKeyChecking=no" ec2-user@54.167.236.204 && cd /home/ec2-user/billing-microservice && docker-compose up --build
        echo "Deploying the app to EC2"




# name: CI/CD Pipeline for Billing Microservice

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2
      
#     # Building and pushing to Docker Hub:
#     - name: Log in to Docker Hub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }} #TODO
#         password: ${{ secrets.DOCKERHUB_TOKEN }} #TODO

#     - name: Build and Push Docker Image to Docker Hub
#       run: |
#         docker build -t my-docker-hub-username/my-app:latest . #TODO Docker image details
#         docker push my-docker-hub-username/my-app:latest #TODO Docker image details

#     # Deploy using AWS CodeDeploy
#     - name: Deploy to AWS CodeDeploy
#       run: |
#         aws deploy create-deployment \
#           --application-name YourCodeDeployApplicationName \ #TODO
#           --deployment-config-name CodeDeployDefault.OneAtATime \
#           --deployment-group-name YourDeploymentGroupName \ #TODO
#           --description "GitHub Actions deployment" \
#           --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
#       env:
#         # TODO AWS Credentials: Store your AWS Access Key ID and Secret Access Key as GitHub secrets.
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: 'your-aws-region' # TODO 
